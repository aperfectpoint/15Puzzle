"""
definitions of the board tiles, separated from the game logic
"""


class Tile:
    """ a basic tile. notice that it's current to_string implementation is simply returning the value """
    def __init__(self, value):
        self.value = value

    def __str__(self):
        return str(self.value)


class EmptyTile(Tile):
    """ a singelton subclass tile, returns the empty string"""
    def __init__(self):
        Tile.__init__(self, ' ')


def id_2_num(tile_id):
    return tile_id+1


def id_2_char(tile_id):
    return chr(97+tile_id)


def init_tiles(f=id_2_num, number_of_tiles=16):
    """
    a factory method to generate the tiles in order.
    since all of the implementations (numbers, characters) are ordered, they can be easily generated by applying
    a function upon them
    """
    tiles = list()
    for i in range(number_of_tiles-1):
        tiles.append(Tile(f(i)))
    # remove the last element
    tiles.append(EmptyTile())
    return tiles
